//
//  InformationViewController.swift
//  28.Davit.Shavtvalishvili
//
//  Created by a on 30.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol InformationDisplayLogic: AnyObject {
    func displaySelectedCountry(viewModel: CountryDetails.ShowCountryDetails.ViewModel)
    func displayWeather(viewModel: CountryDetails.ShowCountryWeather.ViewModel)
}

final class InformationViewController: UIViewController {
    // MARK: - Clean Components
    
    private let interactor: InformationBusinessLogic
    private let router: InformationRoutingLogic & InformationDataPassing
    
    // MARK: - View
    
    private let capitalLabel: UILabel = {
        let view = UILabel()
        view.numberOfLines = 0
        return view
    }()
    
    private let temp: UILabel = {
        let view = UILabel()
        view.numberOfLines = 0
        return view
    }()
    
    private let humidity: UILabel = {
        let view = UILabel()
        view.numberOfLines = 0
        return view
    }()
    // MARK: - Object lifecycle
    
    init(interactor: InformationBusinessLogic, router: InformationRoutingLogic & InformationDataPassing) {
        self.interactor = interactor
        self.router = router
        super.init(nibName: nil, bundle: nil)
    }
    
    required init?(coder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
    
    // MARK: - View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        setupView()
        interactor.getWeather(request: CountryDetails.GetWeather.Request())
        interactor.getCountry(request: CountryDetails.ShowCountryDetails.Request())
    }
    
    // MARK: - Private Methods
    
    private func setupView() {
        view.backgroundColor = .white
        let stackView = UIStackView(arrangedSubviews: [capitalLabel, temp, humidity])
        stackView.axis = .vertical
        view.addSubview(stackView)
        stackView.anchor(left: view.leftAnchor, right: view.rightAnchor, paddingLeft: 12, paddingRight: 12)
        stackView.center(inView: view)
    }
}

// MARK: - CountryDetailsDisplayLogic

extension InformationViewController: InformationDisplayLogic {
    func displayWeather(viewModel: CountryDetails.ShowCountryWeather.ViewModel) {
        temp.text = viewModel.temp
        humidity.text = viewModel.humidity
    }
    
    func displaySelectedCountry(viewModel: CountryDetails.ShowCountryDetails.ViewModel) {
        capitalLabel.text = viewModel.capital
        temp.text = "Loading Weather Data"
    }
}
